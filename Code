function Show-Instructions {
    Write-Host "
    Text-Based Adventure Game
    =========================
    Commands:
    - 'go [direction]' to move (e.g., 'go up')
    - 'get [item]' to pick up an item (e.g., 'get key')
    - 'use [item]' to use an item (e.g., 'use key')
    - 'inventory' to check your items
    - 'look' to inspect the current room (reveals hidden items)
    - 'quit' to exit the game
    "
}

$Rooms = @{
    "Hall" = @{
        Description = "You are in a grand hall. There's a key on a table.";
        Item = "key";
        HiddenItem = $null;
        Exits = @{ Up = "Kitchen"; Right = "Living Room" }
    };
    "Kitchen" = @{
        Description = "You are in a kitchen. The air smells of spices.";
        Item = $null;
        HiddenItem = "map";
        Exits = @{ Down = "Hall" }
    };
    "Living Room" = @{
        Description = "You are in a cozy living room. A locked treasure chest sits in the corner.";
        Item = $null;
        HiddenItem = "note";
        Exits = @{ Left = "Hall" };
        Locked = $true
    }
}

$Inventory = @()
$CurrentRoom = "Hall"

Show-Instructions

while ($true) {
    Write-Host "`nYou are in the $CurrentRoom."
    Write-Host $Rooms[$CurrentRoom].Description

    if ($Rooms[$CurrentRoom].Item) {
        Write-Host "You see a $($Rooms[$CurrentRoom].Item) here."
    }

    $Command = Read-Host "What will you do?"

    if ($Command -eq "quit") {
        Write-Host "Thanks for playing! Goodbye."
        break
    }
    elseif ($Command -like "go *") {
        $Direction = $Command -replace "go ", ""
        if ($Rooms[$CurrentRoom].Exits.$Direction) {
            $CurrentRoom = $Rooms[$CurrentRoom].Exits.$Direction
        } else {
            Write-Host "You can't go that way!"
        }
    }
    elseif ($Command -like "get *") {
        $Item = $Command -replace "get ", ""
        if ($Rooms[$CurrentRoom].Item -eq $Item) {
            Write-Host "You picked up the $Item!"
            $Inventory += $Item
            $Rooms[$CurrentRoom].Item = $null
        } elseif ($Rooms[$CurrentRoom].HiddenItem -eq $Item) {
            Write-Host "You picked up the hidden $Item!"
            $Inventory += $Item
            $Rooms[$CurrentRoom].HiddenItem = $null
        } else {
            Write-Host "There is no $Item here."
        }
    }
    elseif ($Command -like "use *") {
        $Item = $Command -replace "use ", ""
        if ($Inventory -contains $Item) {
            if ($Item -eq "key" -and $CurrentRoom -eq "Living Room" -and $Rooms[$CurrentRoom].Locked) {
                Write-Host "You use the key to unlock the treasure chest!"
                $Rooms[$CurrentRoom].Locked = $false
                $Rooms[$CurrentRoom].Item = "treasure"
                $Inventory = $Inventory | Where-Object { $_ -ne "key" }
            } else {
                Write-Host "You can't use the $Item here."
            }
        } else {
            Write-Host "You don't have a $Item."
        }
    }
    elseif ($Command -eq "inventory") {
        if ($Inventory.Count -gt 0) {
            Write-Host "Inventory: $($Inventory -join ', ')"
        } else {
            Write-Host "Your inventory is empty."
        }
    }
    elseif ($Command -eq "look") {
        Write-Host $Rooms[$CurrentRoom].Description
        if ($Rooms[$CurrentRoom].Item) {
            Write-Host "You see a $($Rooms[$CurrentRoom].Item) here."
        }
        if ($Rooms[$CurrentRoom].HiddenItem) {
            Write-Host "After looking closely, you find a hidden $($Rooms[$CurrentRoom].HiddenItem)!"
            $Rooms[$CurrentRoom].Item = $Rooms[$CurrentRoom].HiddenItem
            $Rooms[$CurrentRoom].HiddenItem = $null
        } else {
            Write-Host "You don't find anything else of interest."
        }
    }
    else {
        Write-Host "I don't understand that command."
    }

    if ($Inventory -contains "treasure") {
        Write-Host "`nCongratulations! You found the treasure and won the game!"
        break
    }
}
