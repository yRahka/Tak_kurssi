function Show-Instructions {
    Write-Host "Commands: go [direction], get [item], use [item], inventory, look, quit"
}

function Initialize-Game {
    $Rooms = @{
        "Hall"         = "A grand hall with high ceilings."
        "Kitchen"      = "A messy kitchen that smells of old food."
        "Living Room"  = "A cozy living room with a fireplace."
        "Library"      = "A dusty library filled with old books."
        "Attic"        = "A dark and cluttered attic."
        "Basement"     = "A cold, damp basement with heavy air."
        "Garden"       = "A peaceful garden surrounded by flowers."
        "Office"       = "A small office with papers scattered everywhere."
        "Bedroom"      = "A tidy bedroom with a large bed."
        "Bathroom"     = "A small, clean bathroom."
        "Dining Room"  = "An elegant dining room."
        "Balcony"      = "A narrow balcony overlooking a garden."
        "Garage"       = "A garage filled with tools and boxes."
        "Pantry"       = "A small pantry with shelves of food."
        "Workshop"     = "A cluttered workshop full of tools."
        "Rooftop"      = "A rooftop surrounded by fresh air."
    }
    $Items = @("key", "map", "book", "lantern", "shovel", "coin", "treasure", "note", "hammer", "wrench", "towel", "mirror", "flower", "glove", "ring", "clock")
    $CorrectUses = @{
        "key" = "Living Room"; "map" = "Library"; "book" = "Office"; "lantern" = "Attic"
        "shovel" = "Garden"; "coin" = "Basement"; "note" = "Kitchen"; "treasure" = "Hall"
        "hammer" = "Workshop"; "wrench" = "Garage"; "towel" = "Bathroom"; "mirror" = "Bedroom"
        "flower" = "Balcony"; "glove" = "Pantry"; "ring" = "Dining Room"; "clock" = "Rooftop"
    }
    $Exits = @("Up", "Down", "Right", "Left")
    $RoomLinks = @{}
    $Rooms.Keys | ForEach-Object { $RoomLinks[$_] = @{} }
    $Rooms.Keys | ForEach-Object {
        $Room = $_; $Exits | Get-Random -Count 2 | ForEach-Object {
            $Direction = $_; $LinkedRoom = $Rooms.Keys | Get-Random
            if ($Room -ne $LinkedRoom -and -not $RoomLinks[$Room].ContainsKey($Direction)) {
                $RoomLinks[$Room][$Direction] = $LinkedRoom
                $RoomLinks[$LinkedRoom][($Direction -replace "Up", "Down" -replace "Down", "Up" -replace "Right", "Left" -replace "Left", "Right")] = $Room
            }
        }
    }
    return @($Rooms, $Items, $CorrectUses, $RoomLinks)
}

$Data = Initialize-Game
$Rooms = $Data[0]; $Items = $Data[1]; $CorrectUses = $Data[2]; $RoomLinks = $Data[3]
$Inventory = @(); $CurrentRoom = "Hall"; $CorrectUsesCount = 0
Show-Instructions

while ($true) {
    Write-Host "`nYou are in the $CurrentRoom. $($Rooms[$CurrentRoom])"
    if ($Items.Count -gt 0 -and $Items -contains $CurrentRoom) { Write-Host "You see a $($Items | Get-Random)." }
    $Command = Read-Host "What will you do?"
    if ($Command -eq "quit") { break }
    elseif ($Command -like "go *") {
        $Dir = $Command -replace "go ", ""
        if ($RoomLinks[$CurrentRoom].ContainsKey($Dir)) { $CurrentRoom = $RoomLinks[$CurrentRoom][$Dir] } else { Write-Host "You can't go that way!" }
    } elseif ($Command -like "get *") {
        $Item = $Command -replace "get ", ""
        if ($Inventory -contains $Item) { $Inventory += } elif ($Rooms.Items){
 
Write-Host "You picked up the $Item!"
            $Inventory += $Item
            $Items = $Items | Where-Object { $_ -ne $Item }
        } else {
            Write-Host "There is no $Item here."
        }
    } elseif ($Command -like "use *") {
        $Item = $Command -replace "use ", ""
        if ($Inventory -contains $Item) {
            if ($CorrectUses[$Item] -eq $CurrentRoom) {
                Write-Host "You used the $Item correctly in the $CurrentRoom!"
                $CorrectUsesCount++
                $Inventory = $Inventory | Where-Object { $_ -ne $Item }
                if ($CorrectUsesCount -eq 3) {
                    Write-Host "`nCongratulations! You used three items correctly and won the game!"
                    break
                }
            } else {
                Write-Host "The $Item doesn't seem useful here."
            }
        } else {
            Write-Host "You don't have a $Item."
        }
    } elseif ($Command -eq "inventory") {
        if ($Inventory.Count -gt 0) {
            Write-Host "Inventory: $($Inventory -join ', ')"
        } else {
            Write-Host "Your inventory is empty."
        }
    } elseif ($Command -eq "look") {
        Write-Host $Rooms[$CurrentRoom]
        if ($Items.Contains($CurrentRoom)) {
            Write-Host "You see a $($Items | Get-Random) here."
        }
    } else {
        Write-Host "Invalid command."
    }
}
